{"version":3,"file":"DbColumn.js","names":[],"sources":["../../src/types/DbColumn.ts"],"sourcesContent":["import { ColumnType as AntdColumnType } from 'antd/es/table';\nimport {\n  GetPageUiType,\n  ListPageUiType,\n  RadioGroupUiTypeEnum,\n  RandomPageUiType,\n  UiType,\n} from './UiType';\nimport { RowType } from './Data';\nimport { types } from '@db-man/github';\n\n// Only used in CreatePage or UpdatePage, only used in Input component (of type=STRING).\ntype ColumnPlaceholder = string;\n\n// DEPRECATED: Use types.DbColumnType from @db-man/github instead\nexport type DbColumnType = 'STRING' | 'STRING_ARRAY' | 'NUMBER' | 'BOOL';\n\nexport type RenderKeyType =\n  | 'type:createUpdatePage'\n  | 'type:getPage'\n  | 'type:listPage'\n  | 'type:randomPage';\n\ntype DbColumnExtendsUiType = {\n  'type:createUpdatePage'?: UiType;\n  'type:getPage'?: GetPageUiType;\n  'type:listPage'?: ListPageUiType;\n  'type:randomPage'?: RandomPageUiType;\n  /**\n   * - Only used on create/update page.\n   *   - When `type=\"STRING_ARRAY\"`, and default UI component `Select` is used.\n   *     - To render some buttons on top of the dropdown, click button to quick append a new tag into the dropdown.\n   *   - When `type=\"STRING\"`, and default UI component `Input` is used.\n   *     - To render some buttons on top of the input box, click button to quick input a new text into the input box.\n   */\n  'ui:presets'?: string[];\n  placeholder?: ColumnPlaceholder;\n  /**\n   * If true, on the list page, the column will be shown in the filter section.\n   */\n  filter?: boolean;\n  /**\n   * In the Form page, e.g. to create a new user, use it to show a dropdown list with \"Maintainer\" and \"Developer\".\n   */\n  enum?: RadioGroupUiTypeEnum;\n  /**\n   * Pass to the Column of Ant Design Table.\n   * TODO maybe we should use `tableColProps` instead of `tableProps`?\n   */\n  tableProps?: any;\n  /**\n   * The value in this column is a reference to another table.\n   * For example\n   *\n   * `users` table:\n   * | id | name | role_code |\n   * | -- | ---- | --------- |\n   * | 1  | John | ADMIN     |\n   *\n   * `roles` table:\n   * | code   | name |\n   * | ------ | ---- |\n   * | ADMIN  | Administrator |\n   *\n   * `users.role_code` is a reference to `roles.code`.\n   * So the column definition of `users.role_code` is:\n   * ```json\n   * {\n   *   \"id\": \"role_code\",\n   *   \"name\": \"Role\",\n   *   \"referenceTable\": \"roles\"\n   * }\n   */\n  referenceTable?: string;\n  isListPageImageViewKey?: string;\n};\n\n// export default interface DbColumn extends AntdColumnType<RowType> {\ntype DbColumn = AntdColumnType<RowType> &\n  types.DbColumn &\n  DbColumnExtendsUiType;\n\nexport default DbColumn;\n"],"mappings":""}