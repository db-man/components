{"version":3,"file":"PageWrapper.test.js","names":["React","BrowserRouter","render","screen","act","setDbs","PageWrapper","describe","it","createElement","el","getByText","expect","toBeInTheDocument","dbsSchema","iam","name","columns","JSON","stringify","dbName","tableName","action","id","primary","Object","defineProperty","window","writable","value","jest","fn","mockImplementation","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent"],"sources":["../../src/layout/PageWrapper.test.tsx"],"sourcesContent":["// @ts-nocheck\n\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport {\n  render, screen, act, /* waitFor, */\n} from '@testing-library/react';\n// import { GithubDb } from '@db-man/github';\n\n// import * as constants from '../constants';\nimport { setDbs } from '../dbs';\nimport PageWrapper from './PageWrapper';\n\n// jest.mock('@db-man/github');\n\ndescribe('PageWrapper', () => {\n  it('renders err when dbName is undefined', () => {\n    render(<BrowserRouter><PageWrapper /></BrowserRouter>);\n    const el = screen.getByText(/dbName is undefined/i);\n    expect(el).toBeInTheDocument();\n  });\n\n  it('renders 404 when url not pass dbName', () => {\n    // jest.spyOn(Object.getPrototypeOf(window.localStorage), 'getItem');\n    // jest.spyOn(Object.getPrototypeOf(window.localStorage), 'setItem');\n    // Object.getPrototypeOf(window.localStorage).getItem = jest.fn((key) => {\n    //   if (key === constants.LS_KEY_DBS_SCHEMA) {\n    //     return '{\"iam\":[{\"name\":\"users\",\"columns\":[{\"id\":\"email\",\"primary\":true}]}]}';\n    //   }\n    //   return null;\n    // });\n    // Object.getPrototypeOf(window.localStorage).setItem = jest.fn();\n\n    render(<BrowserRouter><PageWrapper /></BrowserRouter>);\n    // screen.debug();\n    const el = screen.getByText(/dbName is undefined/i);\n    expect(el).toBeInTheDocument();\n  });\n\n  it('renders when no columns for this table', () => {\n    const dbsSchema = { iam: [{ name: 'users', columns: [] }] };\n\n    // jest.spyOn(Object.getPrototypeOf(window.localStorage), 'getItem');\n    // jest.spyOn(Object.getPrototypeOf(window.localStorage), 'setItem');\n    // Object.getPrototypeOf(window.localStorage).getItem = jest.fn((key) => {\n    //   if (key === constants.LS_KEY_DBS_SCHEMA) {\n    //     return JSON.stringify(dbsSchema);\n    //   }\n    //   return null;\n    // });\n    // Object.getPrototypeOf(window.localStorage).setItem = jest.fn();\n\n    // Prepare db schema in localStorage\n    setDbs(JSON.stringify(dbsSchema));\n\n    render(<BrowserRouter><PageWrapper dbName=\"iam\" tableName=\"users\" action=\"list\" /></BrowserRouter>);\n    const el = screen.getByText(/No columns found for this table!/i);\n    expect(el).toBeInTheDocument();\n  });\n\n  it('renders', async () => {\n    const dbsSchema = { iam: [{ name: 'users', columns: [{ id: 'userId', name: 'User ID', primary: true }] }] };\n\n    // jest.spyOn(Object.getPrototypeOf(window.localStorage), 'getItem');\n    // jest.spyOn(Object.getPrototypeOf(window.localStorage), 'setItem');\n    // Object.getPrototypeOf(window.localStorage).getItem = jest.fn((key) => {\n    //   if (key === constants.LS_KEY_DBS_SCHEMA) {\n    //     return JSON.stringify(dbsSchema);\n    //   }\n    //   return null;\n    // });\n    // Object.getPrototypeOf(window.localStorage).setItem = jest.fn();\n\n    Object.defineProperty(window, 'matchMedia', {\n      writable: true,\n      value: jest.fn().mockImplementation((query) => ({\n        matches: false,\n        media: query,\n        onchange: null,\n        addListener: jest.fn(), // deprecated\n        removeListener: jest.fn(), // deprecated\n        addEventListener: jest.fn(),\n        removeEventListener: jest.fn(),\n        dispatchEvent: jest.fn(),\n      })),\n    });\n\n    // githubDb.getTableRows.mockReset();\n    // githubDb.getTableRows.mockResolvedValue({ content: [{ userId: '123' }] });\n\n    // Prepare db schema in localStorage\n    setDbs(JSON.stringify(dbsSchema));\n\n    act(() => {\n      render(<BrowserRouter><PageWrapper dbName=\"iam\" tableName=\"users\" action=\"list\" /></BrowserRouter>);\n    });\n\n    // await screen.findByText('Loading iam/users ...');\n\n    // await waitFor(() => expect(document.title).toEqual('list users'));\n    // await waitFor(() => expect(githubDb.getTableRows).toHaveBeenCalledTimes(1));\n\n    // await screen.findByText('123');\n  });\n});\n"],"mappings":"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"}