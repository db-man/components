{"version":3,"file":"TagsCloudPageBody.js","names":["React","useContext","useEffect","useState","Link","List","PageContext","TagsCloudPageBody","githubDb","dbName","tableName","loading","setLoading","content","setContent","getDataAsync","contentAndSha","getTableRows","error","console","renderList","tagNameCount","forEach","item","tags","name","dataSource","Object","keys","map","count","sort","a","b","createElement","grid","gutter","xs","sm","md","lg","xl","xxl","renderItem","filter","encodeURIComponent","JSON","stringify","Item","className","to","pathname","search"],"sources":["../../src/components/TagsCloudPageBody.tsx"],"sourcesContent":["/* eslint-disable react/destructuring-assignment, no-console, max-len */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { List } from 'antd';\n\nimport PageContext from '../contexts/page';\nimport { RowType } from '../types/Data';\n\nconst TagsCloudPageBody = () => {\n  const { githubDb, dbName, tableName } = useContext(PageContext);\n  const [loading, setLoading] = useState(false);\n  const [content, setContent] = useState<RowType>([]);\n\n  useEffect(() => {\n    getDataAsync();\n  }, []);\n\n  const getDataAsync = async () => {\n    try {\n      setLoading(true);\n      const contentAndSha = await githubDb!.getTableRows(dbName, tableName);\n      setLoading(false);\n      setContent(contentAndSha.content);\n    } catch (error) {\n      setLoading(false);\n      console.error(\n        'Failed to get JSON file in TagsCloudPageBody component, error:',\n        error\n      );\n    }\n  };\n\n  const renderList = () => {\n    if (!content) return null;\n\n    // tag name <=> tag count\n    const tagNameCount: {\n      [key: string]: number;\n    } = {};\n    content.forEach((item: RowType) => {\n      if (!item.tags) return;\n      item.tags.forEach((name: string) => {\n        if (!tagNameCount[name]) {\n          tagNameCount[name] = 0;\n        }\n        tagNameCount[name] += 1;\n      });\n    });\n\n    const dataSource = Object.keys(tagNameCount)\n      .map((name) => ({\n        name,\n        count: tagNameCount[name],\n      }))\n      .sort((a, b) => b.count - a.count);\n\n    return (\n      <List\n        loading={loading}\n        grid={{\n          gutter: 16,\n          xs: 1,\n          sm: 2,\n          md: 4,\n          lg: 4,\n          xl: 8,\n          xxl: 3,\n        }}\n        dataSource={dataSource}\n        renderItem={(item) => {\n          const filter = encodeURIComponent(\n            JSON.stringify({\n              tags: item.name,\n            })\n          );\n          return (\n            <List.Item>\n              <div className='tags-cloud-item'>\n                <Link\n                  to={{\n                    pathname: `/${dbName}/${tableName}/list`,\n                    search: `?filter=${filter}`,\n                  }}\n                >\n                  {item.name}\n                </Link>{' '}\n                : {item.count}\n              </div>\n            </List.Item>\n          );\n        }}\n      />\n    );\n  };\n\n  return <div className='tags-cloud-page-body-component'>{renderList()}</div>;\n};\n\nexport default TagsCloudPageBody;\n"],"mappings":"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"}