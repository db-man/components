{"version":3,"file":"ImageCardTable.js","names":["React","useContext","Alert","Card","Empty","Pagination","Link","ImageLink","PageContext","gridStyle","width","textAlign","ImageCardTable","imgKey","dataSource","pagination","onChange","dbName","tableName","primaryKey","createElement","message","description","type","showIcon","className","slice","current","pageSize","map","item","index","el","imgSrc","url","length","Fragment","key","Grid","style","to","pathname","search","total","pageSizeOptions"],"sources":["../../../src/components/ListPage/ImageCardTable.tsx"],"sourcesContent":["import React, { useContext } from 'react';\n\nimport { Alert, Card, Empty, Pagination } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { ImageLink } from '../Links';\nimport PageContext from '../../contexts/page';\n\nconst gridStyle: React.CSSProperties = {\n  width: '25%',\n  textAlign: 'center',\n};\n\nexport type CardTablePagination = {\n  pageSize: number;\n  current: number;\n};\n\nconst ImageCardTable = ({\n  imgKey,\n  dataSource,\n  pagination,\n  onChange,\n}: {\n  imgKey?: string;\n  dataSource: any[];\n  pagination: CardTablePagination;\n  onChange: (pagination: CardTablePagination) => void;\n}) => {\n  const { dbName, tableName, primaryKey } = useContext(PageContext);\n\n  if (!imgKey) {\n    return (\n      <Alert\n        message='Error'\n        description={\n          <div>\n            Which column data to render the image list? Please define only one\n            column with <code>isListPageImageViewKey: true</code>\n          </div>\n        }\n        type='error'\n        showIcon\n      />\n    );\n  }\n\n  return (\n    <div className='dm-card-table'>\n      <Card>\n        {dataSource\n          .slice(\n            (pagination.current - 1) * pagination.pageSize,\n            pagination.current * pagination.pageSize\n          )\n          .map((item, index) => {\n            let el = null;\n            switch (typeof item[imgKey]) {\n              case 'undefined':\n                el = <Empty />;\n                break;\n              case 'string':\n                el = <ImageLink imgSrc={item[imgKey]} url={item[imgKey]} />;\n                break;\n              case 'object':\n                if (item[imgKey]?.length === 0)\n                  return (\n                    <Alert\n                      message='Error'\n                      description='Empty image list'\n                      type='error'\n                      showIcon\n                    />\n                  );\n                el = (\n                  <>\n                    {item[imgKey].map((url: string) => (\n                      <ImageLink key={url} imgSrc={url} url={url} />\n                    ))}\n                  </>\n                );\n                break;\n              default:\n                return (\n                  <Alert\n                    message='Error'\n                    description={`The value of ${imgKey} is not a string or an array, but a ${typeof item[\n                      imgKey\n                    ]} type, cannot render image list!`}\n                    type='error'\n                    showIcon\n                  />\n                );\n            }\n\n            return (\n              <Card.Grid key={index} style={gridStyle}>\n                {el}\n                <Link\n                  to={{\n                    pathname: `/${dbName}/${tableName}/update`,\n                    search: `?${primaryKey}=${item[primaryKey]}`,\n                  }}\n                >\n                  Update\n                </Link>\n              </Card.Grid>\n            );\n          })}\n      </Card>\n      <Pagination\n        current={pagination.current}\n        pageSize={pagination.pageSize}\n        total={dataSource.length}\n        pageSizeOptions={[4 * 3, 4 * 6, 4 * 10, 4 * 20]}\n        onChange={(current, pageSize) => {\n          onChange({ current, pageSize });\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ImageCardTable;\n"],"mappings":"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"}