{"version":3,"file":"index.js","names":["React","PropTypes","Link","Table","Input","Row","Col","Spin","Popover","Alert","RightSquareFilled","debounce","PageContext","getColumnRender","findDuplicates","getFilteredData","getSortedData","getInitialFilter","updateUrl","getColumnSortOrder","getInitialSorter","RefTableLinks","constants","defaultPage","defaultPageSize","debouncedUpdateUrl","ListPage","Component","constructor","props","_defineProperty","e","currentPage","state","page","key","filteredSortedData","length","pageSize","updateState","window","scrollTo","top","behavior","event","filter","target","value","pagination","filters","sorter","current","columnKey","order","tableName","dbName","context","setState","loading","content","githubDb","getTableRows","controller","signal","rows","contentTableName","error","console","errMsg","message","states","primaryKey","duplicatedRowKeys","map","item","createElement","style","color","join","invalidRows","forEach","row","idx","undefined","push","rowIdx","rowData","JSON","stringify","className","alertDuplicatedRowKey","alertTableDataInvalid","columns","cols","column","antdCol","id","title","name","dataIndex","sortOrder","tableProps","renderFn","render","referenceTable","lastRender","val","hasVal","type","STRING_ARRAY","args","trigger","to","pathname","search","tip","alertValidations","size","showSorterTooltip","rowKey","getTableColumns","dataSource","showQuickJumper","showTotal","total","onChange","handleTableChange","url","URL","location","Number","searchParams","get","AbortController","componentDidMount","getData","filterCols","addEventListener","handleKeyDown","componentDidUpdate","prevProps","componentWillUnmount","abort","removeEventListener","filteredData","col","gutter","f","span","handleFilterChange","renderTable","propTypes","string","isRequired","contextType"],"sources":["../../../src/components/ListPage/index.tsx"],"sourcesContent":["// @ts-nocheck\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Table, Input, Row, Col, Spin, Popover, Alert } from 'antd';\nimport { RightSquareFilled } from '@ant-design/icons';\nimport debounce from 'lodash.debounce';\n\nimport PageContext from '../../contexts/page';\nimport { getColumnRender } from '../../ddRender/ddRender';\n\nimport {\n  findDuplicates,\n  getFilteredData,\n  getSortedData,\n  getInitialFilter,\n  updateUrl,\n  getColumnSortOrder,\n  getInitialSorter,\n} from './helpers';\nimport RefTableLinks from '../RefTableLinks';\nimport * as constants from '../../constants';\n\nconst defaultPage = 1;\nconst defaultPageSize = 10;\nconst debouncedUpdateUrl = debounce(updateUrl, 500);\n\nexport default class ListPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const url = new URL(window.location);\n    this.state = {\n      filter: {}, // getInitialFilter(this.filterCols), cannot get context in constructor\n      sorter: {\n        columnKey: '', // e.g. \"url\"\n        order: '', //  \"ascend\" or \"descend\" or undefined\n      },\n      loading: '',\n      errMsg: '',\n      rows: null,\n      contentTableName: '', // the current table name of data this.state.rows\n      page: Number(url.searchParams.get('page')) || defaultPage,\n      pageSize: Number(url.searchParams.get('pageSize')) || defaultPageSize,\n    };\n\n    this.controller = new AbortController();\n  }\n\n  componentDidMount() {\n    const { tableName } = this.context;\n    this.getData(tableName);\n    this.setState({\n      filter: getInitialFilter(this.filterCols),\n      sorter: getInitialSorter(),\n    });\n\n    window.addEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tableName } = this.props;\n    if (tableName !== prevProps.tableName) {\n      this.getData(tableName);\n    }\n  }\n\n  componentWillUnmount() {\n    // Cancel all HTTP requests in this page\n    this.controller.abort();\n\n    window.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  handleKeyDown = (e) => {\n    const currentPage = this.state.page;\n\n    if (\n      e.key === 'ArrowRight' &&\n      currentPage < this.filteredSortedData.length / this.state.pageSize\n    ) {\n      this.updateState({\n        page: this.state.page + 1,\n      });\n    } else if (e.key === 'ArrowLeft' && currentPage > 1) {\n      this.updateState({\n        page: this.state.page - 1,\n      });\n    }\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  handleFilterChange = (key) => (event) => {\n    const { filter } = this.state;\n    this.updateState({\n      filter: {\n        ...filter,\n        [key]: event.target.value,\n      },\n    });\n  };\n\n  handleTableChange = (pagination, filters, sorter /* , extra */) => {\n    const { current, pageSize } = pagination;\n    this.updateState({\n      page: current,\n      pageSize,\n      sorter: {\n        columnKey: sorter.columnKey,\n        order: sorter.order, // order could be undefined\n      },\n    });\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  get filteredSortedData() {\n    const { filter, sorter, rows } = this.state;\n    const filteredData = getFilteredData(this.filterCols, filter, rows);\n    if (sorter.columnKey && sorter.order !== undefined) {\n      return getSortedData(filteredData, sorter);\n    }\n    return filteredData;\n  }\n\n  get filterCols() {\n    const { columns } = this.context;\n    return columns.filter((col) => col.filter);\n  }\n\n  getData = async (tableName) => {\n    const { dbName } = this.context;\n    this.setState({ loading: `Loading ${dbName}/${tableName} ...` });\n    try {\n      const { content } = await this.context.githubDb.getTableRows(\n        dbName,\n        tableName,\n        this.controller.signal,\n      );\n      this.setState({\n        rows: content,\n        contentTableName: tableName,\n      });\n    } catch (error) {\n      console.error('Failed to get JSON file in List component, error:', error); // eslint-disable-line no-console\n      this.setState({ errMsg: `Failed to get data: ${error.message}` });\n    }\n    this.setState({ loading: '' });\n  };\n\n  // Update React states and URL states\n  updateState = (states) => {\n    this.setState({ ...states });\n    debouncedUpdateUrl(states);\n  };\n\n  alertDuplicatedRowKey = () => {\n    const { rows } = this.state;\n    const { primaryKey } = this.context;\n    const duplicatedRowKeys = findDuplicates(\n      rows.map((item) => item[primaryKey]),\n    );\n    if (duplicatedRowKeys.length === 0) return null;\n    return (\n      <div style={{ color: 'red' }}>\n        Duplicated row keys(\n        {duplicatedRowKeys.length}\n        ): {duplicatedRowKeys.join(', ')}\n      </div>\n    );\n  };\n\n  alertTableDataInvalid = () => {\n    const { rows } = this.state;\n    const { primaryKey } = this.context;\n    const invalidRows = [];\n    rows.forEach((row, idx) => {\n      if (row[primaryKey] === undefined || row[primaryKey] === null) {\n        invalidRows.push({\n          rowIdx: idx,\n          rowData: row,\n        });\n      }\n    });\n    if (invalidRows.length === 0) return null;\n    return (\n      <div style={{ color: 'red' }}>\n        Invalid rows(\n        {invalidRows.length}\n        ):{' '}\n        {invalidRows.map((row) => (\n          <div>\n            {`idx:${row.rowIdx}`} {JSON.stringify(row.rowData)}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  alertValidations = () => (\n    <div className=\"dm-alert-validations\">\n      {this.alertDuplicatedRowKey()}\n      {this.alertTableDataInvalid()}\n    </div>\n  );\n\n  getTableColumns = () => {\n    const { sorter } = this.state;\n    const { columns, primaryKey, dbName, tableName } = this.context;\n\n    const cols = columns\n      .filter((column) => column['type:listPage'] !== 'HIDE')\n      .map((column) => {\n        // Table component of antd\n        const antdCol = {\n          key: column.id,\n          title: column.name,\n          dataIndex: column.id,\n          // Order of sorted values: 'ascend', 'descend', false\n          sortOrder: getColumnSortOrder(column.id, sorter),\n          sorter: true,\n          ...column.tableProps,\n        };\n\n        const renderFn = getColumnRender('type:listPage', column);\n        if (renderFn) {\n          antdCol.render = renderFn;\n        }\n\n        if (column.referenceTable) {\n          const lastRender = antdCol.render || ((val) => val);\n          const hasVal = (val) => {\n            if (column.type === constants.STRING_ARRAY) {\n              if (!val || val.length === 0) return false;\n              return true;\n            }\n            return !!val;\n          };\n          // If this column has ref table, then render links to ref table item\n          antdCol.render = (...args /* value, record, index */) => (\n            <div>\n              {lastRender(...args)}{' '}\n              {hasVal(args[0]) && (\n                <Popover\n                  title=\"Ref Table Links\"\n                  trigger=\"click\"\n                  content={<RefTableLinks value={args[0]} column={column} />}\n                >\n                  <RightSquareFilled />\n                </Popover>\n              )}\n            </div>\n          );\n        }\n\n        return antdCol;\n      });\n\n    // common columns\n    cols.push({\n      key: 'createdAt',\n      title: 'createdAt',\n      dataIndex: 'createdAt',\n      sortOrder: getColumnSortOrder('createdAt', sorter),\n      sorter: true,\n    });\n    cols.push({\n      key: 'updatedAt',\n      title: 'updatedAt',\n      dataIndex: 'updatedAt',\n      sortOrder: getColumnSortOrder('updatedAt', sorter),\n      sorter: true,\n    });\n    cols.push({\n      key: 'actions',\n      dataIndex: primaryKey,\n      title: 'Actions',\n      render: (id) => (\n        <div>\n          <Link\n            to={{\n              pathname: `/${dbName}/${tableName}/update`,\n              search: `?${primaryKey}=${id}`,\n            }}\n          >\n            Update\n          </Link>{' '}\n          |{' '}\n          <Link\n            to={{\n              pathname: `/${dbName}/${tableName}/get`,\n              search: `?${primaryKey}=${id}`,\n            }}\n          >\n            Detail\n          </Link>\n        </div>\n      ),\n    });\n    return cols;\n  };\n\n  renderTable = () => {\n    const { loading, rows, contentTableName } = this.state;\n    const { page, pageSize, errMsg } = this.state;\n    const { tableName, primaryKey } = this.context;\n    if (loading) return <Spin tip={loading}>Loading...</Spin>;\n    if (errMsg) return <Alert message={errMsg} type=\"error\" />;\n    if (!rows) return null;\n    // When router changed, before loading next table rows,\n    // contentTableName is old table, but this.props.tableName is new table.\n    if (contentTableName !== tableName) return null;\n    return (\n      <div>\n        {this.alertValidations()}\n        <Table\n          size=\"small\"\n          showSorterTooltip={false}\n          rowKey={primaryKey}\n          columns={this.getTableColumns()}\n          dataSource={this.filteredSortedData}\n          pagination={{\n            current: page,\n            pageSize,\n            // total: this.filteredSortedData.length,\n            showQuickJumper: true,\n            showTotal: (total) => `Total ${total} items`,\n          }}\n          onChange={this.handleTableChange}\n        />\n      </div>\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <div className=\"dm-list-page list-component\">\n        <div className=\"table-filter\">\n          <Row gutter={10}>\n            {this.filterCols.map((f) => (\n              <Col key={f.id} span={6}>\n                {f.name}\n                :\n                <Input\n                  size=\"small\"\n                  value={filter[f.id]}\n                  onChange={this.handleFilterChange(f.id)}\n                />\n              </Col>\n            ))}\n          </Row>\n        </div>\n        {this.renderTable()}\n      </div>\n    );\n  }\n}\n\nListPage.propTypes = {\n  // Even tableName is now passing from context,\n  // but we need to pass props.tableName to get new data from backend API\n  tableName: PropTypes.string.isRequired,\n};\n\nListPage.contextType = PageContext;\n"],"mappings":"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"}