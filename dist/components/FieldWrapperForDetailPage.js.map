{"version":3,"file":"FieldWrapperForDetailPage.js","names":["React","useContext","PropTypes","dbs","RefTableLink","PageContext","columnType","constants","FieldWrapperForDetailPage","column","value","children","dbName","typeClassName","type","STRING_ARRAY","createElement","className","JSON","stringify","name","length","referenceTable","tables","propTypes","isRequired","oneOfType","number","bool","string","arrayOf","node","defaultProps"],"sources":["../../src/components/FieldWrapperForDetailPage.tsx"],"sourcesContent":["// @ts-nocheck\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { dbs } from '../dbs';\nimport RefTableLink from './RefTableLink';\nimport PageContext from '../contexts/page';\n\nimport { columnType } from './types';\nimport * as constants from '../constants';\n\n/**\n * Form field wrapper for detail page\n * TODO When value is an array, how to render RefTableLink\n */\nconst FieldWrapperForDetailPage = ({ column, value, children }) => {\n  const { dbName } = useContext(PageContext);\n  const typeClassName =\n    column.type === constants.STRING_ARRAY\n      ? 'dm-string-array-form-field'\n      : 'dm-string-form-field';\n  return (\n    <div\n      // key={column.id}\n      className={`dm-form-field ${typeClassName}`}\n      data-debug={JSON.stringify(column)}\n    >\n      <div className=\"dm-field-label\">\n        <b>\n          {column.name}\n          {column.type === constants.STRING_ARRAY\n            ? ` (count:${value ? value.length : 0})`\n            : null}\n        </b>\n        :{' '}\n        {column.referenceTable && typeof value === 'string' && (\n          <RefTableLink\n            dbName={dbName}\n            tables={dbs[dbName]}\n            value={value}\n            column={column}\n          />\n        )}\n      </div>\n      {children}\n    </div>\n  );\n};\n\nFieldWrapperForDetailPage.propTypes = {\n  column: columnType.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.bool,\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.node,\n};\nFieldWrapperForDetailPage.defaultProps = {\n  value: '',\n  children: null,\n};\n// FieldWrapperForDetailPage.contextType = PageContext;\n\nexport default FieldWrapperForDetailPage;\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,GAAG,QAAQ,QAAQ;AAC5B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,SAASC,UAAU,QAAQ,SAAS;AACpC,OAAO,KAAKC,SAAS,MAAM,cAAc;;AAEzC;AACA;AACA;AACA;AACA,MAAMC,yBAAyB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACjE,MAAM;IAAEC;EAAO,CAAC,GAAGX,UAAU,CAACI,WAAW,CAAC;EAC1C,MAAMQ,aAAa,GACjBJ,MAAM,CAACK,IAAI,KAAKP,SAAS,CAACQ,YAAY,GAClC,4BAA4B,GAC5B,sBAAsB;EAC5B,oBACEf,KAAA,CAAAgB,aAAA;IACE;IACAC,SAAS,EAAG,iBAAgBJ,aAAc,EAAE;IAC5C,cAAYK,IAAI,CAACC,SAAS,CAACV,MAAM;EAAE,gBAEnCT,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC;EAAgB,gBAC7BjB,KAAA,CAAAgB,aAAA,YACGP,MAAM,CAACW,IAAI,EACXX,MAAM,CAACK,IAAI,KAAKP,SAAS,CAACQ,YAAY,GAClC,WAAUL,KAAK,GAAGA,KAAK,CAACW,MAAM,GAAG,CAAE,GAAE,GACtC,IACH,CAAC,KACH,EAAC,GAAG,EACJZ,MAAM,CAACa,cAAc,IAAI,OAAOZ,KAAK,KAAK,QAAQ,iBACjDV,KAAA,CAAAgB,aAAA,CAACZ,YAAY;IACXQ,MAAM,EAAEA,MAAO;IACfW,MAAM,EAAEpB,GAAG,CAACS,MAAM,CAAE;IACpBF,KAAK,EAAEA,KAAM;IACbD,MAAM,EAAEA;EAAO,CAChB,CAEA,CAAC,EACLE,QACE,CAAC;AAEV,CAAC;AAEDH,yBAAyB,CAACgB,SAAS,GAAG;EACpCf,MAAM,EAAEH,UAAU,CAACmB,UAAU;EAC7Bf,KAAK,EAAER,SAAS,CAACwB,SAAS,CAAC,CACzBxB,SAAS,CAACyB,MAAM,EAChBzB,SAAS,CAAC0B,IAAI,EACd1B,SAAS,CAAC2B,MAAM,EAChB3B,SAAS,CAAC4B,OAAO,CAAC5B,SAAS,CAAC2B,MAAM,CAAC,CACpC,CAAC;EACFlB,QAAQ,EAAET,SAAS,CAAC6B;AACtB,CAAC;AACDvB,yBAAyB,CAACwB,YAAY,GAAG;EACvCtB,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC;AACD;;AAEA,eAAeH,yBAAyB"}