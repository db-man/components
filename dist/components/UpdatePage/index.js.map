{"version":3,"file":"index.js","names":["React","useContext","useEffect","useState","message","Alert","Spin","Skeleton","utils","githubUtils","SuccessMessage","Form","PageContext","getNewRows","UpdatePage","primaryKey","appModes","dbName","tableName","githubDb","errorMessage","setErrorMessage","tableFileLoading","setTableFileLoading","rows","setRows","tableFileSha","setTableFileSha","recordFileLoading","setRecordFileLoading","record","setRecord","recordFileSha","setRecordFileSha","loading","setLoading","getData","handleFormSubmit","formValues","isSplitTable","updateRecordFileAsync","updateTableFileAsync","handleDelete","deleteRecordFileAsync","info","currentId","getUrlParams","indexOf","getRecord","find","row","tips","push","newRows","commit","updateTableFile","success","createElement","url","html_url","err","console","error","updatedAt","formatDate","Date","updateRecordFile","deleteRecordFile","ps","getRecordFileAsync","getTableFileAsync","Promise","all","content","sha","getTableRows","getRecordFileContentAndSha","renderAlert","type","renderForm","length","tip","join","defaultValues","onSubmit","onDelete","className"],"sources":["../../../src/components/UpdatePage/index.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { message, Alert, Spin, Skeleton } from 'antd';\nimport { utils as githubUtils } from '@db-man/github';\n\nimport SuccessMessage from '../SuccessMessage';\nimport * as utils from '../../utils';\nimport Form from '../Form';\nimport PageContext from '../../contexts/page';\n\nimport { getNewRows } from './helpers';\nimport { DataRowType, DataType } from '../../types/Data';\n\nconst UpdatePage = () => {\n  const { primaryKey, appModes, dbName, tableName, githubDb } =\n    useContext(PageContext);\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // all rows in table data file\n  const [tableFileLoading, setTableFileLoading] = useState('');\n  const [rows, setRows] = useState<DataRowType>([]);\n  const [tableFileSha, setTableFileSha] = useState(null);\n\n  const [recordFileLoading, setRecordFileLoading] = useState('');\n  const [record, setRecord] = useState<DataType>({});\n  const [recordFileSha, setRecordFileSha] = useState(null);\n\n  const [loading, setLoading] = useState('');\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  /**\n   * `updateTableFileAsync`\n   *   to update the whole table file, it's too big, and take more time to get the response from server\n   * `updateRecordFileAsync`\n   *   to only update record file, file is small, so get response quickly,\n   *   but backend (github action) need to merge several record files into big table file after this update\n   */\n  const handleFormSubmit = (formValues: DataType) => {\n    if (isSplitTable()) {\n      updateRecordFileAsync(formValues);\n    } else {\n      updateTableFileAsync(formValues);\n    }\n  };\n\n  const handleDelete = (formValues: DataType) => {\n    if (isSplitTable()) {\n      deleteRecordFileAsync(formValues);\n    } else {\n      message.info('Only supported in split-table mode!');\n    }\n  };\n\n  /**\n   * If primary key is \"itemId\", and this field value is \"foo\", then return \"foo\"\n   */\n  const currentId = () => {\n    return utils.getUrlParams()[primaryKey];\n  };\n\n  const isSplitTable = () => {\n    return appModes.indexOf('split-table') !== -1;\n  };\n\n  const getRecord = () => {\n    if (isSplitTable()) {\n      return record;\n    }\n    return (\n      rows.find((row) => row[primaryKey] === currentId()) || ({} as DataType)\n    );\n  };\n\n  const tips = () => {\n    const tips = [];\n    if (tableFileLoading) tips.push(tableFileLoading);\n    if (recordFileLoading) tips.push(recordFileLoading);\n    return tips;\n  };\n\n  const updateTableFileAsync = async (formValues: DataType) => {\n    const newRows = getNewRows(formValues, [...rows], primaryKey, currentId());\n\n    setLoading('Updating table file...');\n    try {\n      const { commit } = await githubDb.updateTableFile(\n        dbName,\n        tableName,\n        newRows,\n        tableFileSha\n      );\n\n      message.success(<SuccessMessage url={commit.html_url} />, 10);\n    } catch (err) {\n      console.error('updateTableFile, err:', err);\n      setErrorMessage('Failed to update table file on server!');\n    }\n\n    setLoading('');\n  };\n\n  const updateRecordFileAsync = async (formValues: DataType) => {\n    setLoading('Updating record file...');\n    try {\n      const record = {\n        ...formValues,\n        updatedAt: githubUtils.formatDate(new Date()),\n      };\n      const { commit } = await githubDb.updateRecordFile(\n        dbName,\n        tableName,\n        primaryKey,\n        record,\n        recordFileSha\n      );\n\n      message.success(<SuccessMessage url={commit.html_url} />, 10);\n    } catch (err) {\n      console.error('updateRecordFile, err:', err);\n      setErrorMessage('Failed to update record file on server!');\n    }\n\n    setLoading('');\n  };\n\n  const deleteRecordFileAsync = async (formValues: DataType) => {\n    setLoading('Deleting record file...');\n    try {\n      const { commit } = await githubDb.deleteRecordFile(\n        dbName,\n        tableName,\n        formValues[primaryKey],\n        recordFileSha\n      );\n\n      message.success(<SuccessMessage url={commit.html_url} />, 10);\n    } catch (err) {\n      console.error('deleteRecordFile, err:', err);\n      setErrorMessage('Failed to delete record file on server!');\n    }\n\n    setLoading('');\n  };\n\n  // Get single record file or whole table file\n  const getData = () => {\n    const ps = [];\n    if (isSplitTable()) {\n      // When in split-table mode, whole table file is too big to download and cost a lot of time to download\n      ps.push(getRecordFileAsync());\n    } else {\n      ps.push(getTableFileAsync());\n    }\n    Promise.all(ps);\n  };\n\n  const getTableFileAsync = async () => {\n    setTableFileLoading(`Loading ${dbName}/${tableName} ...`);\n    try {\n      const { content: rows, sha: tableFileSha } = await githubDb.getTableRows(\n        dbName,\n        tableName\n      );\n      setRows(rows);\n      setTableFileSha(tableFileSha);\n    } catch (err) {\n      console.error('getTableRows, error:', err);\n      setErrorMessage('Failed to get table file from server!');\n    }\n    setTableFileLoading('');\n  };\n\n  const getRecordFileAsync = async () => {\n    setRecordFileLoading(`Loading ${dbName}/${tableName}/${currentId()}`);\n    try {\n      const { content, sha } = await githubDb.getRecordFileContentAndSha(\n        dbName,\n        tableName,\n        currentId()\n      );\n      setRecordFileSha(sha);\n      setRecord(content);\n    } catch (err) {\n      console.error('getRecordFileContentAndSha, error:', err);\n      setErrorMessage('Failed to get file from server!');\n    }\n    setRecordFileLoading('');\n  };\n\n  const renderAlert = () => {\n    if (!errorMessage) {\n      return null;\n    }\n    return <Alert message={errorMessage} type='error' />;\n  };\n\n  const renderForm = () => {\n    if (tips().length) {\n      return <Spin tip={tips().join(',')}>Loading...</Spin>;\n    }\n    if (!getRecord()[primaryKey]) {\n      return null;\n    }\n    return (\n      <Form\n        defaultValues={getRecord()}\n        rows={rows}\n        loading={!!loading}\n        onSubmit={handleFormSubmit}\n        onDelete={handleDelete}\n      />\n    );\n  };\n\n  return (\n    <div className='dm-page update-page-body-component'>\n      <Skeleton loading={tips().length > 0}>\n        {renderAlert()}\n        {renderForm()}\n      </Skeleton>\n    </div>\n  );\n};\n\nexport default UpdatePage;\n"],"mappings":"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"}