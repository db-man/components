{"version":3,"file":"index.js","names":["React","message","Alert","Spin","Skeleton","utils","githubUtils","SuccessMessage","Form","PageContext","getNewRows","UpdatePage","Component","constructor","props","_defineProperty","formValues","isSplitTable","updateRecordFileAsync","updateTableFileAsync","deleteRecordFileAsync","info","dbName","tableName","primaryKey","context","rows","tableFileSha","state","newRows","currentId","setState","loading","commit","githubDb","updateTableFile","success","createElement","url","html_url","err","console","error","errorMessage","recordFileSha","record","updatedAt","formatDate","Date","updateRecordFile","deleteRecordFile","ps","push","getRecordFileAsync","getTableFileAsync","Promise","all","tableFileLoading","content","sha","getTableRows","recordFileLoading","getRecordFileContentAndSha","type","tips","length","tip","join","defaultValues","onSubmit","handleFormSubmit","onDelete","handleDelete","componentDidMount","getData","getUrlParams","appModes","indexOf","find","row","render","className","renderAlert","renderForm","contextType"],"sources":["../../../src/components/UpdatePage/index.tsx"],"sourcesContent":["// @ts-nocheck\n\n/* eslint-disable react/destructuring-assignment, no-console, max-len, react/no-unused-class-component-methods */\n\nimport React from 'react';\nimport { message, Alert, Spin, Skeleton } from 'antd';\nimport { utils as githubUtils } from '@db-man/github';\n\nimport SuccessMessage from '../SuccessMessage';\nimport * as utils from '../../utils';\nimport Form from '../Form';\nimport PageContext from '../../contexts/page';\n\nimport { getNewRows } from './helpers';\n\nexport default class UpdatePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMessage: '',\n\n      // all rows in table data file\n      tableFileLoading: '',\n      rows: [],\n      tableFileSha: null,\n\n      recordFileLoading: '',\n      record: {},\n      recordFileSha: null,\n\n      loading: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  /**\n   * `updateTableFileAsync`\n   *   to update the whole table file, it's too big, and take more time to get the response from server\n   * `updateRecordFileAsync`\n   *   to only update record file, file is small, so get response quickly,\n   *   but backend (github action) need to merge several record files into big table file after this update\n   */\n  handleFormSubmit = (formValues) => {\n    if (this.isSplitTable) {\n      this.updateRecordFileAsync(formValues);\n    } else {\n      this.updateTableFileAsync(formValues);\n    }\n  };\n\n  handleDelete = (formValues) => {\n    if (this.isSplitTable) {\n      this.deleteRecordFileAsync(formValues);\n    } else {\n      message.info('Only supported in split-table mode!');\n    }\n  };\n\n  /**\n   * If primary key is \"itemId\", and this field value is \"foo\", then return \"foo\"\n   */\n  get currentId() {\n    return utils.getUrlParams()[this.context.primaryKey];\n  }\n\n  get isSplitTable() {\n    const { appModes } = this.context;\n    return appModes.indexOf('split-table') !== -1;\n  }\n\n  get record() {\n    if (this.isSplitTable) {\n      return this.state.record;\n    }\n    return (\n      this.state.rows.find(\n        (row) => row[this.context.primaryKey] === this.currentId,\n      ) || {}\n    );\n  }\n\n  get tips() {\n    const { tableFileLoading, recordFileLoading } = this.state;\n    const tips = [];\n    if (tableFileLoading) tips.push(tableFileLoading);\n    if (recordFileLoading) tips.push(recordFileLoading);\n    return tips;\n  }\n\n  updateTableFileAsync = async (formValues) => {\n    const { dbName, tableName, primaryKey } = this.context;\n    const { rows, tableFileSha } = this.state;\n\n    const newRows = getNewRows(\n      formValues,\n      [...rows],\n      primaryKey,\n      this.currentId,\n    );\n\n    this.setState({ loading: 'Updating table file...' });\n    try {\n      const { commit } = await this.context.githubDb.updateTableFile(\n        dbName,\n        tableName,\n        newRows,\n        tableFileSha,\n      );\n\n      message.success(<SuccessMessage url={commit.html_url} />, 10);\n    } catch (err) {\n      console.error('updateTableFile, err:', err);\n      this.setState({\n        errorMessage: 'Failed to update table file on server!',\n      });\n    }\n\n    this.setState({ loading: '' });\n  };\n\n  updateRecordFileAsync = async (formValues) => {\n    const { dbName, tableName, primaryKey } = this.context;\n    const { recordFileSha } = this.state;\n\n    this.setState({ loading: 'Updating record file...' });\n    try {\n      const record = {\n        ...formValues,\n        updatedAt: githubUtils.formatDate(new Date()),\n      };\n      const { commit } = await this.context.githubDb.updateRecordFile(\n        dbName,\n        tableName,\n        primaryKey,\n        record,\n        recordFileSha,\n      );\n\n      message.success(<SuccessMessage url={commit.html_url} />, 10);\n    } catch (err) {\n      console.error('updateRecordFile, err:', err);\n      this.setState({\n        errorMessage: 'Failed to update record file on server!',\n      });\n    }\n\n    this.setState({ loading: '' });\n  };\n\n  deleteRecordFileAsync = async (formValues) => {\n    const { dbName, tableName, primaryKey } = this.context;\n    const { recordFileSha } = this.state;\n\n    this.setState({ loading: 'Deleting record file...' });\n    try {\n      const { commit } = await this.context.githubDb.deleteRecordFile(\n        dbName,\n        tableName,\n        formValues[primaryKey],\n        recordFileSha,\n      );\n\n      message.success(<SuccessMessage url={commit.html_url} />, 10);\n    } catch (err) {\n      console.error('deleteRecordFile, err:', err);\n      this.setState({\n        errorMessage: 'Failed to delete record file on server!',\n      });\n    }\n\n    this.setState({ loading: '' });\n  };\n\n  // Get single record file or whole table file\n  getData = () => {\n    const ps = [];\n    if (this.isSplitTable) {\n      // When in split-table mode, whole table file is too big to download and cost a lot of time to download\n      ps.push(this.getRecordFileAsync());\n    } else {\n      ps.push(this.getTableFileAsync());\n    }\n    Promise.all(ps);\n  };\n\n  getTableFileAsync = async () => {\n    const { dbName, tableName } = this.context;\n    this.setState({ tableFileLoading: `Loading ${dbName}/${tableName} ...` });\n    try {\n      const { content: rows, sha: tableFileSha } = await this.context.githubDb.getTableRows(\n        dbName,\n        tableName,\n      );\n      this.setState({\n        rows,\n        tableFileSha,\n      });\n    } catch (err) {\n      console.error('getTableRows, error:', err);\n      this.setState({ errorMessage: 'Failed to get table file from server!' });\n    }\n    this.setState({ tableFileLoading: '' });\n  };\n\n  getRecordFileAsync = async () => {\n    const { dbName, tableName } = this.context;\n    this.setState({\n      recordFileLoading: `Loading ${dbName}/${tableName}/${this.currentId}`,\n    });\n    try {\n      const { content, sha } = await this.context.githubDb.getRecordFileContentAndSha(\n        dbName,\n        tableName,\n        this.currentId,\n      );\n      this.setState({\n        recordFileSha: sha,\n        record: content,\n      });\n    } catch (err) {\n      console.error('getRecordFileContentAndSha, error:', err);\n      this.setState({ errorMessage: 'Failed to get file from server!' });\n    }\n    this.setState({ recordFileLoading: '' });\n  };\n\n  renderAlert = () => {\n    if (!this.state.errorMessage) {\n      return null;\n    }\n    return <Alert message={this.state.errorMessage} type=\"error\" />;\n  };\n\n  renderForm = () => {\n    if (this.tips.length) {\n      return <Spin tip={this.tips.join(',')}>Loading...</Spin>;\n    }\n    if (!this.record[this.context.primaryKey]) {\n      return null;\n    }\n    return (\n      <Form\n        defaultValues={this.record}\n        rows={this.state.rows}\n        loading={!!this.state.loading}\n        onSubmit={this.handleFormSubmit}\n        onDelete={this.handleDelete}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"dm-page update-page-body-component\">\n        <Skeleton loading={this.tips.length > 0}>\n          {this.renderAlert()}\n          {this.renderForm()}\n        </Skeleton>\n      </div>\n    );\n  }\n}\n\nUpdatePage.contextType = PageContext;\n"],"mappings":"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"}