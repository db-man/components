{"version":3,"file":"ErrorAlert.js","names":["React","PropTypes","Alert","Input","Popover","Button","ErrorAlert","json","error","tplStr","record","createElement","message","content","style","width","TextArea","defaultValue","rows","JSON","stringify","title","trigger","size","danger","type","closable","propTypes","string","isRequired","shape"],"sources":["../../src/components/ErrorAlert.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Input, Popover, Button } from 'antd';\nimport { RowType } from '../types/Data';\n\nexport default function ErrorAlert({\n  json,\n  error,\n  tplStr,\n  record,\n}: {\n  json: string;\n  error: { message: string };\n  tplStr: string;\n  record: RowType;\n}) {\n  return (\n    <Alert\n      message={\n        <div>\n          {`Failed to parse JSON generated from template, fallback to render plain text. `}\n          <Popover\n            content={\n              <div style={{ width: '800px' }}>\n                <div>Error: {error.message}</div>\n                <div>\n                  {`The generated JSON (Copy the JSON to do the validation):`}\n                  <Input.TextArea defaultValue={json} />\n                </div>\n                <div>\n                  tplStr: <Input.TextArea defaultValue={tplStr} />\n                </div>\n                <div>\n                  record:{' '}\n                  <Input.TextArea\n                    rows={7}\n                    defaultValue={JSON.stringify(record, null, 2)}\n                  />\n                </div>\n              </div>\n            }\n            title='Debug Info'\n            trigger='click'\n          >\n            <Button size='small' danger>\n              Debug Info\n            </Button>\n          </Popover>\n        </div>\n      }\n      type='error'\n      closable\n    />\n  );\n}\nErrorAlert.propTypes = {\n  json: PropTypes.string.isRequired,\n  error: PropTypes.shape({ message: PropTypes.string }).isRequired,\n  tplStr: PropTypes.string.isRequired,\n  record: PropTypes.string.isRequired,\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,MAAM;AAGpD,eAAe,SAASC,UAAUA,CAAC;EACjCC,IAAI;EACJC,KAAK;EACLC,MAAM;EACNC;AAMF,CAAC,EAAE;EACD,oBACEV,KAAA,CAAAW,aAAA,CAACT,KAAK;IACJU,OAAO,eACLZ,KAAA,CAAAW,aAAA,cACI,+EAA8E,eAChFX,KAAA,CAAAW,aAAA,CAACP,OAAO;MACNS,OAAO,eACLb,KAAA,CAAAW,aAAA;QAAKG,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ;MAAE,gBAC7Bf,KAAA,CAAAW,aAAA,cAAK,SAAO,EAACH,KAAK,CAACI,OAAa,CAAC,eACjCZ,KAAA,CAAAW,aAAA,cACI,0DAAyD,eAC3DX,KAAA,CAAAW,aAAA,CAACR,KAAK,CAACa,QAAQ;QAACC,YAAY,EAAEV;MAAK,CAAE,CAClC,CAAC,eACNP,KAAA,CAAAW,aAAA,cAAK,UACK,eAAAX,KAAA,CAAAW,aAAA,CAACR,KAAK,CAACa,QAAQ;QAACC,YAAY,EAAER;MAAO,CAAE,CAC5C,CAAC,eACNT,KAAA,CAAAW,aAAA,cAAK,SACI,EAAC,GAAG,eACXX,KAAA,CAAAW,aAAA,CAACR,KAAK,CAACa,QAAQ;QACbE,IAAI,EAAE,CAAE;QACRD,YAAY,EAAEE,IAAI,CAACC,SAAS,CAACV,MAAM,EAAE,IAAI,EAAE,CAAC;MAAE,CAC/C,CACE,CACF,CACN;MACDW,KAAK,EAAC,YAAY;MAClBC,OAAO,EAAC;IAAO,gBAEftB,KAAA,CAAAW,aAAA,CAACN,MAAM;MAACkB,IAAI,EAAC,OAAO;MAACC,MAAM;IAAA,GAAC,YAEpB,CACD,CACN,CACN;IACDC,IAAI,EAAC,OAAO;IACZC,QAAQ;EAAA,CACT,CAAC;AAEN;AACApB,UAAU,CAACqB,SAAS,GAAG;EACrBpB,IAAI,EAAEN,SAAS,CAAC2B,MAAM,CAACC,UAAU;EACjCrB,KAAK,EAAEP,SAAS,CAAC6B,KAAK,CAAC;IAAElB,OAAO,EAAEX,SAAS,CAAC2B;EAAO,CAAC,CAAC,CAACC,UAAU;EAChEpB,MAAM,EAAER,SAAS,CAAC2B,MAAM,CAACC,UAAU;EACnCnB,MAAM,EAAET,SAAS,CAAC2B,MAAM,CAACC;AAC3B,CAAC"}