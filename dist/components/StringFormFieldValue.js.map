{"version":3,"file":"StringFormFieldValue.js","names":["React","PropTypes","Input","Row","Col","StringFormFieldValue","props","value","preview","renderInput","inputProps","onChange","createElement","_extends","size","event","target","input","gutter","span","href","rel","width","src","alt","style","border","propTypes","string","bool","shape","disabled","autoFocus","onKeyDown","func","defaultProps"],"sources":["../../src/components/StringFormFieldValue.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Row, Col } from 'antd';\n\nexport interface InputProps {\n  disabled?: boolean;\n  readOnly?: boolean;\n  autoFocus?: boolean;\n  placeholder?: string;\n  onKeyDown?: (event: React.KeyboardEvent) => void;\n}\n\ninterface StringFormFieldValueProps {\n  value?: string;\n  preview?: boolean;\n  inputProps?: InputProps;\n  onChange?: (\n    value: string,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n}\n\nconst StringFormFieldValue = (props: StringFormFieldValueProps) => {\n  const { value, preview } = props;\n\n  const renderInput = () => {\n    const { value, inputProps, onChange = () => {} } = props;\n    return (\n      <Input\n        {...inputProps}\n        size='small'\n        value={value}\n        onChange={(event) => {\n          onChange(event.target.value, event);\n        }}\n      />\n    );\n  };\n\n  const input = renderInput();\n\n  // DELETE\n  if (!preview) {\n    return input;\n  }\n  return (\n    <Row gutter={16}>\n      <Col span={12}>{input}</Col>\n      <Col span={12}>\n        <a href={value} target='_blank' rel='noreferrer'>\n          {value ? (\n            <img\n              width='200px'\n              src={value}\n              alt='img'\n              style={{ border: '1px solid' }}\n            />\n          ) : null}\n        </a>\n      </Col>\n    </Row>\n  );\n};\n\nexport default StringFormFieldValue;\n\nStringFormFieldValue.propTypes = {\n  value: PropTypes.string,\n  preview: PropTypes.bool,\n  inputProps: PropTypes.shape({\n    disabled: PropTypes.bool,\n    autoFocus: PropTypes.bool,\n    onKeyDown: PropTypes.func,\n  }),\n  onChange: PropTypes.func,\n};\nStringFormFieldValue.defaultProps = {\n  value: '',\n  // Props to pass directly to antd's Input component\n  inputProps: {\n    // disabled\n    // autoFocus\n    // onKeyDown\n  },\n  preview: false,\n  onChange: () => {},\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,KAAK,EAAEC,GAAG,EAAEC,GAAG,QAAQ,MAAM;AAoBtC,MAAMC,oBAAoB,GAAIC,KAAgC,IAAK;EACjE,MAAM;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EAEhC,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAM;MAAEF,KAAK;MAAEG,UAAU;MAAEC,QAAQ,GAAGA,CAAA,KAAM,CAAC;IAAE,CAAC,GAAGL,KAAK;IACxD,oBACEN,KAAA,CAAAY,aAAA,CAACV,KAAK,EAAAW,QAAA,KACAH,UAAU;MACdI,IAAI,EAAC,OAAO;MACZP,KAAK,EAAEA,KAAM;MACbI,QAAQ,EAAGI,KAAK,IAAK;QACnBJ,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACT,KAAK,EAAEQ,KAAK,CAAC;MACrC;IAAE,EACH,CAAC;EAEN,CAAC;EAED,MAAME,KAAK,GAAGR,WAAW,CAAC,CAAC;;EAE3B;EACA,IAAI,CAACD,OAAO,EAAE;IACZ,OAAOS,KAAK;EACd;EACA,oBACEjB,KAAA,CAAAY,aAAA,CAACT,GAAG;IAACe,MAAM,EAAE;EAAG,gBACdlB,KAAA,CAAAY,aAAA,CAACR,GAAG;IAACe,IAAI,EAAE;EAAG,GAAEF,KAAW,CAAC,eAC5BjB,KAAA,CAAAY,aAAA,CAACR,GAAG;IAACe,IAAI,EAAE;EAAG,gBACZnB,KAAA,CAAAY,aAAA;IAAGQ,IAAI,EAAEb,KAAM;IAACS,MAAM,EAAC,QAAQ;IAACK,GAAG,EAAC;EAAY,GAC7Cd,KAAK,gBACJP,KAAA,CAAAY,aAAA;IACEU,KAAK,EAAC,OAAO;IACbC,GAAG,EAAEhB,KAAM;IACXiB,GAAG,EAAC,KAAK;IACTC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAY;EAAE,CAChC,CAAC,GACA,IACH,CACA,CACF,CAAC;AAEV,CAAC;AAED,eAAerB,oBAAoB;AAEnCA,oBAAoB,CAACsB,SAAS,GAAG;EAC/BpB,KAAK,EAAEN,SAAS,CAAC2B,MAAM;EACvBpB,OAAO,EAAEP,SAAS,CAAC4B,IAAI;EACvBnB,UAAU,EAAET,SAAS,CAAC6B,KAAK,CAAC;IAC1BC,QAAQ,EAAE9B,SAAS,CAAC4B,IAAI;IACxBG,SAAS,EAAE/B,SAAS,CAAC4B,IAAI;IACzBI,SAAS,EAAEhC,SAAS,CAACiC;EACvB,CAAC,CAAC;EACFvB,QAAQ,EAAEV,SAAS,CAACiC;AACtB,CAAC;AACD7B,oBAAoB,CAAC8B,YAAY,GAAG;EAClC5B,KAAK,EAAE,EAAE;EACT;EACAG,UAAU,EAAE;IACV;IACA;IACA;EAAA,CACD;EACDF,OAAO,EAAE,KAAK;EACdG,QAAQ,EAAEA,CAAA,KAAM,CAAC;AACnB,CAAC"}