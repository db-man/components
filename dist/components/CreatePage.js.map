{"version":3,"file":"CreatePage.js","names":["React","useContext","useEffect","useState","message","Spin","Alert","utils","githubUtils","validatePrimaryKey","SuccessMessage","Form","PageContext","constants","CreatePage","appModes","githubDb","dbName","tableName","primaryKey","columns","errorMessage","setErrorMessage","tableFileLoading","setTableFileLoading","rows","setRows","tableFileSha","setTableFileSha","defaultFormValues","setDefaultFormValues","saveLoading","setSaveLoading","getData","fields","getInitialFormFields","handleFormSubmit","formValues","isSplitTable","updateTableFileAsync","createRecordFileAsync","indexOf","newContent","formValidation","time","formatDate","Date","push","createdAt","updatedAt","_result","updateTableFile","success","createElement","url","commit","html_url","err","console","error","record","updateRecordFile","ps","getTableFileAsync","Promise","all","getTableRows","content","sha","filter","col","getUrlParams","id","forEach","type","STRING_ARRAY","warnPrimaryKeyInvalid","value","warning","href","className","spinning","tip","getDataUrl","target","rel","defaultValues","loading","onSubmit"],"sources":["../../src/components/CreatePage.tsx"],"sourcesContent":["/* eslint-disable react/destructuring-assignment, no-console, max-len, react/no-unused-class-component-methods */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { message, Spin, Alert } from 'antd';\nimport { utils as githubUtils } from '@db-man/github';\n\nimport { validatePrimaryKey } from './Form/helpers';\nimport SuccessMessage from './SuccessMessage';\nimport * as utils from '../utils';\nimport Form, { ValueType } from './Form';\nimport PageContext from '../contexts/page';\nimport * as constants from '../constants';\nimport { RowType } from '../types/Data';\n\nconst CreatePage = () => {\n  const { appModes, githubDb, dbName, tableName, primaryKey, columns } =\n    useContext(PageContext);\n\n  const [errorMessage, setErrorMessage] = useState('');\n  // all rows in table file\n  const [tableFileLoading, setTableFileLoading] = useState(false);\n  // all rows in whole table, in split table mode, it's empty\n  const [rows, setRows] = useState<RowType[]>([]);\n  const [tableFileSha, setTableFileSha] = useState<string | null>(null);\n  const [defaultFormValues, setDefaultFormValues] = useState<ValueType | null>(\n    null\n  );\n  const [saveLoading, setSaveLoading] = useState(false);\n\n  useEffect(() => {\n    getData();\n\n    const fields = getInitialFormFields();\n    setDefaultFormValues({\n      ...fields,\n    });\n  }, []);\n\n  // `updateTableFileAsync` to update the whole table file, it's too big, and take more time to get the response from server\n  // `createRecordFileAsync` to only create record file, file is small, so get response quickly, but backend (github action) need to merge records into big table file\n  const handleFormSubmit = (formValues: ValueType) => {\n    if (!isSplitTable()) {\n      updateTableFileAsync(formValues);\n    } else {\n      createRecordFileAsync(formValues);\n    }\n  };\n\n  const isSplitTable = () => {\n    return appModes.indexOf('split-table') !== -1;\n  };\n\n  const updateTableFileAsync = async (formValues: ValueType) => {\n    const newContent: RowType[] = [...rows];\n\n    if (!formValidation(rows, formValues)) {\n      return;\n    }\n\n    const time = githubUtils.formatDate(new Date());\n    newContent.push({\n      ...formValues,\n      createdAt: time,\n      updatedAt: time,\n    });\n\n    setSaveLoading(true);\n    try {\n      const _result = await githubDb?.updateTableFile(\n        dbName,\n        tableName,\n        newContent,\n        tableFileSha\n      );\n\n      if (_result) {\n        message.success(<SuccessMessage url={_result.commit.html_url} />, 10);\n      }\n    } catch (err) {\n      console.error('updateTableFile, err:', err);\n      setErrorMessage('Failed to update table file on server!');\n    }\n\n    setSaveLoading(false);\n  };\n\n  const createRecordFileAsync = async (formValues: ValueType) => {\n    const time = githubUtils.formatDate(new Date());\n    const record = {\n      ...formValues,\n      createdAt: time,\n      updatedAt: time,\n    };\n\n    setSaveLoading(true);\n    try {\n      const _result = await githubDb?.updateRecordFile(\n        dbName,\n        tableName,\n        primaryKey,\n        record,\n        null // recordFileSha\n      );\n\n      if (_result) {\n        message.success(<SuccessMessage url={_result.commit.html_url} />, 10);\n      }\n    } catch (err) {\n      console.error('updateRecordFile, err:', err);\n      setErrorMessage('Failed to create record file on server!');\n    }\n\n    setSaveLoading(false);\n  };\n\n  // Get single record file, the whole table file will be used to de-dup\n  const getData = () => {\n    const ps = [];\n    // Whole table file is too big, so only get it when it's not split table\n    if (!isSplitTable()) {\n      ps.push(getTableFileAsync());\n    }\n    Promise.all(ps);\n  };\n\n  const getTableFileAsync = async () => {\n    setTableFileLoading(true);\n    try {\n      const _result = await githubDb?.getTableRows(dbName, tableName);\n      if (_result) {\n        setRows(_result.content);\n        setTableFileSha(_result.sha);\n      }\n    } catch (err) {\n      console.error('getTableRows, error:', err);\n      setErrorMessage('Failed to get table file from server!');\n    }\n    setTableFileLoading(false);\n  };\n\n  // Create the initial form fields\n  const getInitialFormFields = () => {\n    const fields: ValueType = {};\n\n    // Fill the form field with URL params\n    columns\n      .filter((col) => utils.getUrlParams()[col.id])\n      .forEach((col) => {\n        if (col.type === constants.STRING_ARRAY) {\n          fields[col.id] = [utils.getUrlParams()[col.id]];\n        } else {\n          fields[col.id] = utils.getUrlParams()[col.id];\n        }\n      });\n\n    return fields;\n  };\n\n  const formValidation = (rows: RowType[], formValues: ValueType) => {\n    if (!validatePrimaryKey(formValues[primaryKey], rows, primaryKey)) {\n      warnPrimaryKeyInvalid(formValues[primaryKey]);\n      return false;\n    }\n    return true;\n  };\n\n  const warnPrimaryKeyInvalid = (value: string) =>\n    message.warning(\n      <div>\n        Found duplicated item in db{' '}\n        <a href={`/${dbName}/${tableName}/update?${primaryKey}=${value}`}>\n          {value}\n        </a>\n      </div>,\n      10\n    );\n\n  if (defaultFormValues === null) {\n    return null;\n  }\n\n  return (\n    <div className='dm-page'>\n      <h1>\n        Create {dbName} {tableName}\n      </h1>\n      <div className='create-page-body-component'>\n        <Spin\n          spinning={tableFileLoading}\n          tip={\n            <div>\n              Loading file:{' '}\n              <a\n                href={githubDb?.getDataUrl(dbName, tableName)}\n                target='_blank'\n                rel='noreferrer'\n              >\n                {dbName}/{tableName}\n              </a>\n            </div>\n          }\n        >\n          {errorMessage && <Alert message={errorMessage} type='error' />}\n          <Form\n            defaultValues={defaultFormValues}\n            rows={rows}\n            loading={saveLoading}\n            onSubmit={handleFormSubmit}\n          />\n        </Spin>\n      </div>\n    </div>\n  );\n};\n\nexport default CreatePage;\n"],"mappings":"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"}