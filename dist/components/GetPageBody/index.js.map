{"version":3,"file":"index.js","names":["React","useCallback","useContext","useEffect","message","Alert","Spin","utils","PageContext","Detail","GetPageBody","dbName","tableName","appModes","primaryKey","githubDb","columns","contentLoading","setContentLoading","useState","contentLoaded","setContentLoaded","refTables","setRefTables","errorMessage","setErrorMessage","record","setRecord","getInitialFormFields","tableRows","foundRows","filter","item","getUrlParams","length","getSingleRecordAsync","currentId","getRecordFileContentAndSha","then","content","catch","err","console","error","getTableRowsAsync","getTableRows","r","ps","indexOf","push","getRefTablePromises","referenceTable","map","prevRefTables","Promise","all","finally","renderAlert","createElement","type","renderDetail","defaultValues","className"],"sources":["../../../src/components/GetPageBody/index.tsx"],"sourcesContent":["import React, { useCallback, useContext, useEffect } from 'react';\nimport { message, Alert, Spin } from 'antd';\n\nimport * as utils from '../../utils';\nimport PageContext from '../../contexts/page';\nimport Detail from './Detail';\nimport { RowType } from '../../types/Data';\n\nconst GetPageBody = () => {\n  const { dbName, tableName, appModes, primaryKey, githubDb, columns } =\n    useContext(PageContext);\n\n  const [contentLoading, setContentLoading] = React.useState(false);\n  const [contentLoaded, setContentLoaded] = React.useState(false);\n  const [refTables, setRefTables] = React.useState({});\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const [record, setRecord] = React.useState({}); // One record in table rows\n\n  // Create the initial form fields according to whether create/update.\n  const getInitialFormFields = useCallback(\n    (tableRows: RowType[]) => {\n      const foundRows = tableRows.filter(\n        (item) => item[primaryKey] === utils.getUrlParams()[primaryKey]\n      );\n\n      if (foundRows.length === 0) {\n        setErrorMessage('item not found in db');\n        return null;\n      }\n      if (foundRows.length > 1) {\n        setErrorMessage('more than 1 rows');\n        return null;\n      }\n\n      return {\n        ...foundRows[0],\n      };\n    },\n    [primaryKey]\n  );\n\n  const getSingleRecordAsync = useCallback(() => {\n    /**\n     * If primary key is \"itemId\", and this field value is \"foo\", then return \"foo\"\n     */\n    const currentId = () => {\n      return utils.getUrlParams()[primaryKey];\n    };\n    // ValueType vs DataType\n    return githubDb!\n      .getRecordFileContentAndSha(dbName, tableName, currentId())\n      .then(({ content }: { content: RowType }) => {\n        setContentLoaded(true);\n        setRecord(content);\n      })\n      .catch((err: Error) => {\n        console.error('githubDb.getRecordFileContentAndSha failed, err:', err);\n        message.error('something wrong in githubDb.getRecordFileContentAndSha');\n      });\n  }, [dbName, tableName, githubDb, primaryKey]);\n\n  const getTableRowsAsync = useCallback(() => {\n    return githubDb\n      ?.getTableRows(dbName, tableName)\n      .then(({ content }: { content: RowType }) => {\n        return content as RowType[];\n      })\n      .then((tableRows: RowType[]) => {\n        setContentLoaded(true);\n        const r = getInitialFormFields(tableRows);\n        if (r) {\n          setRecord(r);\n        } else {\n          message.error('item not found in db');\n        }\n      })\n      .catch((err: Error) => {\n        console.error('getTableRows failed, err:', err);\n        message.error('something wrong in getTableRows');\n      });\n  }, [dbName, tableName, getInitialFormFields, githubDb]);\n\n  // page mount or db/table change load data\n  useEffect(() => {\n    setContentLoading(true);\n    const ps = [];\n\n    if (appModes.indexOf('split-table') !== -1) {\n      ps.push(getSingleRecordAsync());\n    } else {\n      ps.push(getTableRowsAsync());\n    }\n\n    const getRefTablePromises = columns\n      .filter(({ referenceTable }) => referenceTable)\n      .map(({ referenceTable }) => {\n        return githubDb!\n          .getTableRows(dbName, referenceTable!)\n          .then(({ content }: { content: RowType[] }) => {\n            setRefTables((prevRefTables) => ({\n              ...prevRefTables,\n              [`ref:${referenceTable}:rows`]: content, // TODO\n            }));\n          });\n      });\n\n    // console.debug('Start getting all table data...');\n    Promise.all([...ps, ...getRefTablePromises])\n      .then(() => {\n        // console.debug('Finish getting all table data...');\n      })\n      .finally(() => {\n        setContentLoading(false);\n      });\n  }, [\n    dbName,\n    tableName,\n    columns,\n    getSingleRecordAsync,\n    getTableRowsAsync,\n    githubDb,\n    appModes,\n  ]);\n\n  const renderAlert = () =>\n    errorMessage && <Alert message={errorMessage} type='error' />;\n\n  const renderDetail = () => {\n    if (record === null) {\n      return null;\n    }\n    return <Detail defaultValues={record} refTables={refTables} />;\n  };\n\n  if (contentLoading) {\n    return <Spin />;\n  }\n\n  if (!contentLoaded) {\n    return null;\n  }\n\n  return (\n    <div className='get-body-component'>\n      {renderAlert()}\n      {renderDetail()}\n    </div>\n  );\n};\n\nexport default GetPageBody;\n"],"mappings":"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"}