{"version":3,"file":"ddRender.test.js","names":["Handlebars","getRender","getColumnRender","describe","test","view","id","expect","url","toMatchSnapshot","it","photos","toBe","name","type","undefined","tags","age","active","args","record","column","note","tables","columns","primary","imgsTableRows","userRecord","userId","tpl","compile","json","extra","rows","result","JSON","parse","toHaveLength","description"],"sources":["../../src/ddRender/ddRender.test.js"],"sourcesContent":["import Handlebars from 'handlebars/dist/handlebars';\nimport { getRender, getColumnRender } from './ddRender';\n\ndescribe('getColumnRender', () => {\n  test('should return proper value', () => {\n    const view = getColumnRender('type:listPage', {\n      id: 'url',\n      'type:listPage': 'ImageLink',\n    });\n    expect(\n      view('https://a.com/b.jpg', { url: 'https://a.com/b.jpg' }, 1)\n    ).toMatchSnapshot();\n  });\n\n  test('should return proper value2', () => {\n    const view = getColumnRender('type:listPage', {\n      id: 'yrl',\n      'type:listPage': [\n        'ImageLink',\n        '{\"url\":\"{{record.url}}\",\"imgSrc\":\"{{record.url}}\"}',\n      ],\n    });\n    expect(\n      view('https://a.com/large/b.jpg', { url: 'https://a.com/large/b.jpg' })\n    ).toMatchSnapshot();\n  });\n\n  describe('given Link', () => {\n    it('should match snapshot', () => {\n      expect(\n        getColumnRender('type:listPage', {\n          'type:listPage': [\n            'Link',\n            '{\"href\":\"{{record.url}}\",\"text\":\"{{record.url}}\"}',\n          ],\n        })('https://foo.com', { url: 'https://foo.com' })\n      ).toMatchSnapshot();\n    });\n  });\n\n  describe('given ImageLink', () => {\n    it('should match snapshot', () => {\n      expect(\n        getColumnRender('type:listPage', {\n          'type:listPage': [\n            'ImageLink',\n            '{\"url\":\"{{record.photos.[0]}}\",\"imgSrc\":\"{{record.photos.[0]}}\"}',\n          ],\n        })('https://foo.com/a.jpg', {\n          id: 'foo',\n          photos: ['https://foo.com/a.jpg'],\n        })\n      ).toMatchSnapshot();\n    });\n    it('should match snapshot when photos is undefined', () => {\n      expect(\n        getColumnRender('type:listPage', {\n          'type:listPage': [\n            'ImageLink',\n            '{\"url\":\"{{record.photos.[0]}}\",\"imgSrc\":\"record.photos.[0]\"}',\n          ],\n        })('', { id: 'foo' })\n      ).toMatchSnapshot();\n    });\n  });\n\n  describe('given hidden column in a list page', () => {\n    it('should return default render func', () => {\n      const view = getColumnRender('type:listPage', {\n        'type:listPage': 'HIDE',\n      });\n      expect(view('foo')).toBe('foo');\n    });\n  });\n\n  describe('default render function', () => {\n    it('type is STRING', () => {\n      const view = getColumnRender('type:getPage', {\n        id: 'name',\n        name: 'Name',\n        type: 'STRING',\n      });\n      expect(view('David', { name: 'David' })).toBe('David');\n      expect(view(undefined, { name: undefined })).toBe('NO_VALUE');\n    });\n    it('type is STRING_ARRAY', () => {\n      const view = getColumnRender('type:getPage', {\n        id: 'tags',\n        name: 'Tags',\n        type: 'STRING_ARRAY',\n      });\n      expect(view(['dog', 'cat'], { tags: ['dog', 'cat'] })).toBe('dog, cat');\n      expect(view(undefined, { tags: undefined })).toBe('NO_VALUE');\n    });\n    it('type is NUMBER', () => {\n      const view = getColumnRender('type:getPage', {\n        id: 'age',\n        name: 'Age',\n        type: 'NUMBER',\n      });\n      expect(view(12, { age: 12 })).toBe('12');\n      expect(view(undefined, { age: undefined })).toBe('NO_VALUE');\n    });\n    it('type is BOOL', () => {\n      const view = getColumnRender('type:getPage', {\n        id: 'active',\n        name: 'Active',\n        type: 'BOOL',\n      });\n      expect(view(true, { active: true })).toBe('true');\n      expect(view(undefined, { active: undefined })).toBe('NO_VALUE');\n    });\n  });\n});\n\ndescribe('getRender', () => {\n  describe('given simple arg', () => {\n    it('should render properly', () => {\n      const args = 'Link';\n      const record = { url: 'https://foo.com' };\n      expect(getRender(args)(record.url, record)).toMatchSnapshot();\n    });\n  });\n  describe('given tpl', () => {\n    it('should render properly', () => {\n      const args = [\n        'Link',\n        '{\"href\":\"{{record.url}}\",\"text\":\"{{record.url}}\"}',\n      ];\n      const record = { url: 'https://foo.com' };\n      expect(getRender(args)(record.url, record)).toMatchSnapshot();\n    });\n  });\n  describe('TextAreaFormFieldValue', () => {\n    it('should match snapshot', () => {\n      const args = [\n        'TextAreaFormFieldValue',\n        '{\"label\":\"{{extra.column.name}}\",\"rows\":2,\"value\":\"{{record.note}}\"}',\n      ];\n      const column = { id: 'note', name: 'Note' };\n      const record = { note: 'This is TODO' };\n      expect(\n        getRender(args, { column })(record.note, record)\n      ).toMatchSnapshot();\n    });\n  });\n});\n\ndescribe('handlebars helper getTableRecordByKey', () => {\n  it('should return proper value', () => {\n    const tables = [\n      { name: 'users', columns: [{ id: 'userId', primary: true }] },\n      { name: 'imgs', columns: [{ id: 'url', primary: true }] },\n    ];\n    const imgsTableRows = [\n      { url: 'https://foo.jpg', tags: ['foo', 'bar'] },\n      { url: 'https://bar.jpg', tags: ['foo2', 'bar2'] },\n    ];\n    const userRecord = {\n      userId: '123',\n      photos: ['https://foo.jpg', 'https://bar.jpg'],\n    };\n    // loop each photos of one user from `users` table\n    // for each photo link, try to search in `imgs` table\n    // when found, get the tags of record from `imgs` table\n    const tpl = Handlebars.compile(`[\n{{#each userRecord.photos}}\n{{#if @index}},{{/if}}\n{\n  \"url\":\"{{this}}\",\n  \"imgSrc\":\"{{this}}_th.jpg\",\n  \"description\":\"{{#with (\n    getTableRecordByKey\n    tables=../extra.tables\n    tableName=\"imgs\"\n    primaryKeyVal=this\n    rows=../extra.rows\n  )}}{{join tags \", \"}}{{/with}}\"\n}\n{{/each}}\n]`);\n    const json = tpl({\n      userRecord,\n      extra: {\n        tables,\n        rows: imgsTableRows,\n      },\n    });\n    const result = JSON.parse(json);\n    expect(result).toHaveLength(2);\n    expect(result[0].url).toBe('https://foo.jpg');\n    expect(result[0].description).toBe('foo, bar');\n  });\n});\n"],"mappings":"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"}