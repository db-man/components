{"version":3,"file":"page.js","names":["React","PageContext","createContext","appModes","dbs","dbName","tableName","action","columns","primaryKey","tables","githubDb"],"sources":["../../src/contexts/page.ts"],"sourcesContent":["import React from 'react';\n\nimport DbColumn from '../types/DbColumn';\nimport Databases from '../types/Databases';\nimport { RowType } from '../types/Data';\n\nexport interface PageContextType {\n  appModes: string[];\n  dbs?: Databases;\n  dbName: string;\n  tableName: string;\n  action: string;\n  columns: DbColumn[];\n  primaryKey: string;\n  tables: string[];\n  githubDb: {\n    getTableRows: (\n      dbName: string,\n      tableName: string,\n      signal?: AbortSignal\n    ) => Promise<{ content: RowType[]; sha: string }>;\n    updateTableFile: (\n      dbName: string,\n      tableName: string,\n      content: RowType[],\n      tableFileSha: string | null\n    ) => Promise<{\n      commit: {\n        html_url?: string;\n      };\n    }>;\n    // updateTableFile: any;\n    updateRecordFile: (\n      dbName: string,\n      tableName: string,\n      recordId: string,\n      content: RowType,\n      recordFileSha: string | null\n    ) => Promise<{\n      commit: {\n        html_url?: string;\n      };\n    }>;\n    getDataUrl: (dbName: string, tableName: string) => string;\n    getRecordFileContentAndSha: (\n      dbName: string,\n      tableName: string,\n      recordId: string,\n      signal?: AbortSignal\n    ) => Promise<{ content: RowType; sha: string }>;\n    getGitHubFullPath: (path: string) => string;\n    getDataPath: (dbName: string, tableName: string) => string;\n    deleteRecordFile: (\n      dbName: string,\n      tableName: string,\n      recordId: string,\n      recordFileSha: string | null\n    ) => Promise<{\n      commit: {\n        html_url?: string;\n      };\n    }>;\n  } | null;\n}\n\n// Store all page info, include db, table, and columns\n// Setter: src/layout/PageWrapper.tsx\nconst PageContext = React.createContext<PageContextType>({\n  appModes: [], // all app modes: 'split-table'\n  dbs: {}, // all dbs\n  dbName: '',\n  tableName: '',\n  action: '',\n  columns: [],\n  primaryKey: '', // primary key of current db table\n  tables: [],\n  githubDb: null, // GitHubDb from @db-man/github\n});\n\nexport default PageContext;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAiEzB;AACA;AACA,MAAMC,WAAW,gBAAGD,KAAK,CAACE,aAAa,CAAkB;EACvDC,QAAQ,EAAE,EAAE;EAAE;EACdC,GAAG,EAAE,CAAC,CAAC;EAAE;EACTC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,EAAE;EACbC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,EAAE;EACXC,UAAU,EAAE,EAAE;EAAE;EAChBC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE,IAAI,CAAE;AAClB,CAAC,CAAC;;AAEF,eAAeV,WAAW"}